{"ast":null,"code":"import apiUrl from '../api';\nexport default {\n  async mounted() {\n    try {\n      const response = await this.$axios.get(`${apiUrl}/api/listaUsuarios`);\n      this.users = response.data;\n    } catch (error) {\n      console.error('Error al obtener la lista de usuarios', error);\n    }\n  },\n  data() {\n    return {\n      users: []\n    };\n  }\n};","map":{"version":3,"names":["apiUrl","mounted","response","$axios","get","users","data","error","console"],"sources":["C:\\Users\\J. Gabriel\\Desktop\\proyectos\\prueba_tnight_vue\\src\\components\\AgregarUsuario.vue"],"sourcesContent":["<template>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Añadir empleado</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n    <nav class=\"navbar bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" th:href=\"@{/demo/v1/employees}\">\r\n                <img src=\"https://cdn4.iconfinder.com/data/icons/social-messaging-ui-color-squares-01/3/15-512.png\" alt=\"Logo\" width=\"30\" height=\"30\" class=\"d-inline-block align-text-top\">\r\n                Gestor de empleados (CrudSpringBoot - JGVG)\r\n            </a>\r\n        </div>\r\n    </nav>\r\n\r\n    <div class=\"m-4 row justify-content-center align-items-center\">\r\n        <div class=\"col-sm-6 mt-4\">\r\n            <form th:action=\"@{/demo/v1/saveEmployee}\" th:object=${employee} method=\"post\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h3>Añadir empleado</h3>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"d-flex\">\r\n                          <label class=\"m-2\">Nombre:</label>\r\n                          <input th:field=\"*{name}\" type=\"text\" maxlength=\"25\" class=\"form-control form-control-sm\"/>\r\n                            <div class=\"w-50 p-1\">\r\n                                <label class=\"m-2\">Num. seguridad social</label>\r\n                                <input th:field=\"*{nSegSocial}\" maxlength=\"9\" type=\"text\" class=\"form-control form-control-sm\"/>\r\n                                <label class=\"m-2\">Salario (€)</label>\r\n                                <input th:field=\"*{salary}\" type=\"text\" class=\"form-control form-control-sm\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label class=\"m-2\">Correo</label>\r\n                            <input th:field=\"*{email}\" maxlength=\"25\" type=\"email\" class=\"form-control form-control-sm\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <input type=\"submit\" value=\"Guardar\" class=\"btn btn-success\"/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</template>\r\n\r\n<script>\r\n  import apiUrl from '../api';\r\n\r\n  export default {\r\n    async mounted() {\r\n      try {\r\n        const response = await this.$axios.get(`${apiUrl}/api/listaUsuarios`);\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error('Error al obtener la lista de usuarios', error);\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        users: [],\r\n      };\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos específicos del componente */\r\n</style>\r\n"],"mappings":"AAmDE,OAAOA,MAAK,MAAO,QAAQ;AAE3B,eAAe;EACb,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAE,GAAEJ,MAAO,oBAAmB,CAAC;MACrE,IAAI,CAACK,KAAI,GAAIH,QAAQ,CAACI,IAAI;IAC5B,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EACDD,IAAIA,CAAA,EAAG;IACL,OAAO;MACLD,KAAK,EAAE;IACT,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}